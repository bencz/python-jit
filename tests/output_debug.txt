[refcount:create] created Unicode object 0x557fb3046420: Definitions of built-in functions.
[refcount:create] created Unicode object 0x557fb3053ec0: __main__
[refcount:create] created Unicode object 0x557fb304e170: builtins
[__main__] loaded exceptions_basic.py (19 lines, 517 bytes)

[__main__] ======== module lexed
      n:    0 type:             Try s: f:0.000000 i:0 off:0 len:3
      n:    1 type:          _Colon s: f:0.000000 i:0 off:3 len:1
      n:    2 type:        _Newline s: f:0.000000 i:0 off:4 len:1
      n:    3 type:         _Indent s: f:0.000000 i:0 off:5 len:0
      n:    4 type:        _Dynamic s:print f:0.000000 i:0 off:7 len:5
      n:    5 type:      _OpenParen s: f:0.000000 i:0 off:12 len:1
      n:    6 type:_UnicodeConstant s:whatever you do, don\'t type a string with the letter y in it f:0.000000 i:0 off:13 len:63
      n:    7 type:     _CloseParen s: f:0.000000 i:0 off:76 len:1
      n:    8 type:        _Newline s: f:0.000000 i:0 off:77 len:1
      n:    9 type:        _Dynamic s:value f:0.000000 i:0 off:80 len:5
      n:   10 type:         _Equals s: f:0.000000 i:0 off:86 len:1
      n:   11 type:        _Dynamic s:input f:0.000000 i:0 off:88 len:5
      n:   12 type:      _OpenParen s: f:0.000000 i:0 off:93 len:1
      n:   13 type:     _CloseParen s: f:0.000000 i:0 off:94 len:1
      n:   14 type:        _Newline s: f:0.000000 i:0 off:95 len:1
      n:   15 type:          Assert s: f:0.000000 i:0 off:98 len:6
      n:   16 type:_UnicodeConstant s:y f:0.000000 i:0 off:105 len:3
      n:   17 type:           NotIn s: f:0.000000 i:0 off:17 len:0
      n:   18 type:        _Dynamic s:value f:0.000000 i:0 off:116 len:5
      n:   19 type:          _Comma s: f:0.000000 i:0 off:121 len:1
      n:   20 type:_UnicodeConstant s:you typed:  f:0.000000 i:0 off:123 len:13
      n:   21 type:           _Plus s: f:0.000000 i:0 off:137 len:1
      n:   22 type:        _Dynamic s:value f:0.000000 i:0 off:139 len:5
      n:   23 type:        _Newline s: f:0.000000 i:0 off:144 len:1
      n:   24 type:        _Dynamic s:print f:0.000000 i:0 off:147 len:5
      n:   25 type:      _OpenParen s: f:0.000000 i:0 off:152 len:1
      n:   26 type:_UnicodeConstant s:code after the assert statement executed f:0.000000 i:0 off:153 len:42
      n:   27 type:     _CloseParen s: f:0.000000 i:0 off:195 len:1
      n:   28 type:        _Newline s: f:0.000000 i:0 off:196 len:1
      n:   29 type:       _Unindent s: f:0.000000 i:0 off:198 len:0
      n:   30 type:          Except s: f:0.000000 i:0 off:198 len:6
      n:   31 type:        _Dynamic s:AssertionError f:0.000000 i:0 off:205 len:14
      n:   32 type:              As s: f:0.000000 i:0 off:220 len:2
      n:   33 type:        _Dynamic s:e1 f:0.000000 i:0 off:223 len:2
      n:   34 type:          _Colon s: f:0.000000 i:0 off:225 len:1
      n:   35 type:        _Newline s: f:0.000000 i:0 off:226 len:1
      n:   36 type:         _Indent s: f:0.000000 i:0 off:227 len:0
      n:   37 type:        _Dynamic s:print f:0.000000 i:0 off:229 len:5
      n:   38 type:      _OpenParen s: f:0.000000 i:0 off:234 len:1
      n:   39 type:_UnicodeConstant s:nooooo you monster! what have you done! f:0.000000 i:0 off:235 len:41
      n:   40 type:     _CloseParen s: f:0.000000 i:0 off:276 len:1
      n:   41 type:        _Newline s: f:0.000000 i:0 off:331 len:1
      n:   42 type:       _Unindent s: f:0.000000 i:0 off:333 len:0
      n:   43 type:          Except s: f:0.000000 i:0 off:333 len:6
      n:   44 type:        _Dynamic s:MemoryError f:0.000000 i:0 off:340 len:11
      n:   45 type:              As s: f:0.000000 i:0 off:352 len:2
      n:   46 type:        _Dynamic s:e2 f:0.000000 i:0 off:355 len:2
      n:   47 type:          _Colon s: f:0.000000 i:0 off:357 len:1
      n:   48 type:        _Newline s: f:0.000000 i:0 off:358 len:1
      n:   49 type:         _Indent s: f:0.000000 i:0 off:359 len:0
      n:   50 type:        _Dynamic s:print f:0.000000 i:0 off:361 len:5
      n:   51 type:      _OpenParen s: f:0.000000 i:0 off:366 len:1
      n:   52 type:_UnicodeConstant s:something went horribly horribly wrong f:0.000000 i:0 off:367 len:40
      n:   53 type:     _CloseParen s: f:0.000000 i:0 off:407 len:1
      n:   54 type:        _Newline s: f:0.000000 i:0 off:408 len:1
      n:   55 type:       _Unindent s: f:0.000000 i:0 off:410 len:0
      n:   56 type:            Else s: f:0.000000 i:0 off:410 len:4
      n:   57 type:          _Colon s: f:0.000000 i:0 off:414 len:1
      n:   58 type:        _Newline s: f:0.000000 i:0 off:415 len:1
      n:   59 type:         _Indent s: f:0.000000 i:0 off:416 len:0
      n:   60 type:        _Dynamic s:print f:0.000000 i:0 off:418 len:5
      n:   61 type:      _OpenParen s: f:0.000000 i:0 off:423 len:1
      n:   62 type:_UnicodeConstant s:the string did not contain y - all is well f:0.000000 i:0 off:424 len:44
      n:   63 type:     _CloseParen s: f:0.000000 i:0 off:468 len:1
      n:   64 type:        _Newline s: f:0.000000 i:0 off:469 len:1
      n:   65 type:       _Unindent s: f:0.000000 i:0 off:471 len:0
      n:   66 type:         Finally s: f:0.000000 i:0 off:471 len:7
      n:   67 type:          _Colon s: f:0.000000 i:0 off:478 len:1
      n:   68 type:        _Newline s: f:0.000000 i:0 off:479 len:1
      n:   69 type:         _Indent s: f:0.000000 i:0 off:480 len:0
      n:   70 type:        _Dynamic s:print f:0.000000 i:0 off:482 len:5
      n:   71 type:      _OpenParen s: f:0.000000 i:0 off:487 len:1
      n:   72 type:_UnicodeConstant s:it is now the end of days f:0.000000 i:0 off:488 len:27
      n:   73 type:     _CloseParen s: f:0.000000 i:0 off:515 len:1
      n:   74 type:        _Newline s: f:0.000000 i:0 off:516 len:1
      n:   75 type:       _Unindent s: f:0.000000 i:0 off:517 len:0
      n:   76 type:        _Newline s: f:0.000000 i:0 off:76 len:0

[__main__] ======== module parsed
# ModuleStatement
try:
    print(u'whatever you do, don\'t type a string with the letter y in it')
    value $ = input()
    assert (u'y' not in value), (u'you typed: ' + value)
    print(u'code after the assert statement executed')
except AssertionError as e1:
    print(u'nooooo you monster! what have you done!')
except MemoryError as e2:
    print(u'something went horribly horribly wrong')
else:
    print(u'the string did not contain y - all is well')
finally:
    print(u'it is now the end of days')

[__main__] ======== module annotated
# ModuleStatement
try:
    print@0(u'whatever you do, don\'t type a string with the letter y in it')
    value $ = input@1()
    assert (u'y' not in value), (u'you typed: ' + value)
    print@2(u'code after the assert statement executed')
except AssertionError as e1:
    print@3(u'nooooo you monster! what have you done!')
except MemoryError as e2:
    print@4(u'something went horribly horribly wrong')
else:
    print@5(u'the string did not contain y - all is well')
finally:
    print@6(u'it is now the end of days')
# split count: 7
# global: __file__ = '/home/bencz/programming/python-jit/tests/exceptions_basic.py'
# global: __name__ = '__main__'
# global: e1
# global: e2
# global: value

[__main__] ======== module analyzed
# ModuleStatement
try:
    print@0=-1(u'whatever you do, don\'t type a string with the letter y in it')
    value $ = input@1=-3()
    assert (u'y' not in value), (u'you typed: ' + value)
    print@2=-1(u'code after the assert statement executed')
except AssertionError as e1:
    print@3=-1(u'nooooo you monster! what have you done!')
except MemoryError as e2:
    print@4=-1(u'something went horribly horribly wrong')
else:
    print@5=-1(u'the string did not contain y - all is well')
finally:
    print@6=-1(u'it is now the end of days')
# global at r13+8: __file__ = '/home/bencz/programming/python-jit/tests/exceptions_basic.py'
# global at r13+0: __name__ = '__main__'
# global at r13+24: e1 = Instance:-17
# global at r13+32: e2 = Instance:-42
# global at r13+16: value = Unicode

[refcount:create] created Unicode object 0x557fb3051320: /home/bencz/programming/python-jit/tests/exceptions_basic.py
[__main__] ======== global space statically initialized
00 | C0 3E 05 B3 7F 55 00 00 20 13 05 B3 7F 55 00 00 |  >   U       U  
10 | 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 |                 
20 | 00 00 00 00 00 00 00 00                         |                 

[refcount:create] created Unicode object 0x557fb303c100: whatever you do, don't type a string with the letter y in it
[refcount:create] created Unicode object 0x557fb3044cd0: 
[refcount:create] created Unicode object 0x557fb3071c30: y
[refcount:create] created Unicode object 0x557fb30744d0: you typed: 
[refcount:create] created Unicode object 0x557fb30528c0: code after the assert statement executed
[refcount:create] created Unicode object 0x557fb307b290: the string did not contain y - all is well
[refcount:create] created Unicode object 0x557fb307eb80: nooooo you monster! what have you done!
[refcount:create] created Unicode object 0x557fb3081e60: something went horribly horribly wrong
[refcount:create] created Unicode object 0x557fb3050cf0: it is now the end of days
[__main__+ROOT] ======== scope compiled

[__main__+ROOT] ======== scope assembled

__ModuleStatement_0x557fb3050990:
00007F6CFBECA000   55                              push     rbp
00007F6CFBECA001   48 89 E5                        mov      rbp, rsp
00007F6CFBECA004   41 54                           push     r12
00007F6CFBECA006   49 BC D0 9D 03 B3 7F 55 00 00   movabs   r12, 0x0000557FB3039DD0
00007F6CFBECA010   41 55                           push     r13
00007F6CFBECA012   49 BD 30 0B 05 B3 7F 55 00 00   movabs   r13, 0x0000557FB3050B30
00007F6CFBECA01C   41 56                           push     r14
00007F6CFBECA01E   4D 31 F6                        xor      r14, r14
00007F6CFBECA021   41 57                           push     r15
00007F6CFBECA023   4D 31 FF                        xor      r15, r15
__ModuleStatement_0x557fb3050990_create_exc_block:
00007F6CFBECA026   48 89 E0                        mov      rax, rsp
00007F6CFBECA029   6A 00                           push     0x00
00007F6CFBECA02B   48 B9 C0 A3 EC FB 6C 7F 00 00   movabs   rcx, 0x00007F6CFBECA3C0
00007F6CFBECA035   51                              push     rcx
00007F6CFBECA036   41 55                           push     r13
00007F6CFBECA038   41 54                           push     r12
00007F6CFBECA03A   55                              push     rbp
00007F6CFBECA03B   50                              push     rax
00007F6CFBECA03C   41 56                           push     r14
00007F6CFBECA03E   49 89 E6                        mov      r14, rsp
__ModuleStatement_0x557fb3050990_body:
__TryStatement_0x557fb303ae60_create_exc_block:
00007F6CFBECA041   48 89 E0                        mov      rax, rsp
00007F6CFBECA044   6A 00                           push     0x00
00007F6CFBECA046   48 B9 67 A3 EC FB 6C 7F 00 00   movabs   rcx, 0x00007F6CFBECA367
00007F6CFBECA050   51                              push     rcx
00007F6CFBECA051   6A D6                           push     -0x2A
00007F6CFBECA053   6A 01                           push     0x01
00007F6CFBECA055   48 B9 15 A3 EC FB 6C 7F 00 00   movabs   rcx, 0x00007F6CFBECA315
00007F6CFBECA05F   51                              push     rcx
00007F6CFBECA060   6A EF                           push     -0x11
00007F6CFBECA062   6A 01                           push     0x01
00007F6CFBECA064   48 B9 C1 A2 EC FB 6C 7F 00 00   movabs   rcx, 0x00007F6CFBECA2C1
00007F6CFBECA06E   51                              push     rcx
00007F6CFBECA06F   41 55                           push     r13
00007F6CFBECA071   41 54                           push     r12
00007F6CFBECA073   55                              push     rbp
00007F6CFBECA074   50                              push     rax
00007F6CFBECA075   41 56                           push     r14
00007F6CFBECA077   49 89 E6                        mov      r14, rsp
__TryStatement_0x557fb303ae60_body:
__FunctionCall_0x557fb3046510_push_registers:
__FunctionCall_0x557fb3046510_evaluate_arg_0_passed_value:
00007F6CFBECA07A   48 BF 00 C1 03 B3 7F 55 00 00   movabs   rdi, 0x0000557FB303C100
00007F6CFBECA084   57                              push     rdi
00007F6CFBECA085   48 83 EC 08                     sub      rsp, 8
00007F6CFBECA089   41 FF 54 24 20                  call     qword ptr [r12 + 0x20]
00007F6CFBECA08E   48 83 C4 08                     add      rsp, 8
00007F6CFBECA092   5F                              pop      rdi
__FunctionCall_0x557fb3046510_call_function_-1_fragment_5_split_0:
00007F6CFBECA093   48 B8 30 33 7E B1 7F 55 00 00   movabs   rax, 0x0000557FB17E3330
00007F6CFBECA09D   FF D0                           call     rax
__FunctionCall_0x557fb3046510_returned:
00007F6CFBECA09F   4D 85 FF                        test     r15, r15
00007F6CFBECA0A2   74 05                           je       +0x5 ; __FunctionCall_0x557fb3046510_no_exception, __FunctionCall_0x557fb3046510_restore_stack, __AssignmentStatement_0x557fb304f110, __FunctionCall_0x557fb3046610_push_registers, __FunctionCall_0x557fb3046610_evaluate_arg_0_default_value
00007F6CFBECA0A4   41 FF 64 24 30                  jmp      qword ptr [r12 + 0x30]
__FunctionCall_0x557fb3046510_no_exception:
__FunctionCall_0x557fb3046510_restore_stack:
__AssignmentStatement_0x557fb304f110:
__FunctionCall_0x557fb3046610_push_registers:
__FunctionCall_0x557fb3046610_evaluate_arg_0_default_value:
00007F6CFBECA0A9   48 BF D0 4C 04 B3 7F 55 00 00   movabs   rdi, 0x0000557FB3044CD0
00007F6CFBECA0B3   57                              push     rdi
00007F6CFBECA0B4   48 83 EC 08                     sub      rsp, 8
00007F6CFBECA0B8   41 FF 54 24 20                  call     qword ptr [r12 + 0x20]
00007F6CFBECA0BD   48 83 C4 08                     add      rsp, 8
00007F6CFBECA0C1   5F                              pop      rdi
__FunctionCall_0x557fb3046610_call_function_-3_fragment_0_split_1:
00007F6CFBECA0C2   48 B8 E0 35 7E B1 7F 55 00 00   movabs   rax, 0x0000557FB17E35E0
00007F6CFBECA0CC   FF D0                           call     rax
__FunctionCall_0x557fb3046610_returned:
00007F6CFBECA0CE   4D 85 FF                        test     r15, r15
00007F6CFBECA0D1   74 05                           je       +0x5 ; __FunctionCall_0x557fb3046610_no_exception, __FunctionCall_0x557fb3046610_restore_stack, __AssignmentStatement_0x557fb304f110_write_value
00007F6CFBECA0D3   41 FF 64 24 30                  jmp      qword ptr [r12 + 0x30]
__FunctionCall_0x557fb3046610_no_exception:
__FunctionCall_0x557fb3046610_restore_stack:
__AssignmentStatement_0x557fb304f110_write_value:
00007F6CFBECA0D8   50                              push     rax
00007F6CFBECA0D9   48 83 EC 08                     sub      rsp, 8
00007F6CFBECA0DD   4C 89 F6                        mov      rsi, r14
00007F6CFBECA0E0   49 8B 7D 10                     mov      rdi, [r13 + 0x10]
00007F6CFBECA0E4   41 FF 54 24 28                  call     qword ptr [r12 + 0x28]
00007F6CFBECA0E9   48 83 C4 08                     add      rsp, 8
00007F6CFBECA0ED   58                              pop      rax
00007F6CFBECA0EE   49 89 45 10                     mov      [r13 + 0x10], rax
__AssertStatement_0x557fb304f960_check:
__BinaryOperation_0x557fb304f210_evaluate_left:
00007F6CFBECA0F2   48 B8 30 1C 07 B3 7F 55 00 00   movabs   rax, 0x0000557FB3071C30
00007F6CFBECA0FC   50                              push     rax
00007F6CFBECA0FD   48 83 EC 08                     sub      rsp, 8
00007F6CFBECA101   48 89 C7                        mov      rdi, rax
00007F6CFBECA104   41 FF 54 24 20                  call     qword ptr [r12 + 0x20]
00007F6CFBECA109   48 83 C4 08                     add      rsp, 8
00007F6CFBECA10D   58                              pop      rax
00007F6CFBECA10E   50                              push     rax
__BinaryOperation_0x557fb304f210_evaluate_right:
00007F6CFBECA10F   49 8B 45 10                     mov      rax, [r13 + 0x10]
00007F6CFBECA113   50                              push     rax
00007F6CFBECA114   48 89 C7                        mov      rdi, rax
00007F6CFBECA117   41 FF 54 24 20                  call     qword ptr [r12 + 0x20]
00007F6CFBECA11C   58                              pop      rax
00007F6CFBECA11D   50                              push     rax
__BinaryOperation_0x557fb304f210_combine:
00007F6CFBECA11E   48 8B 74 24 08                  mov      rsi, [rsp + 0x8]
00007F6CFBECA123   48 89 C7                        mov      rdi, rax
00007F6CFBECA126   41 FF 94 24 80 00 00 00         call     qword ptr [r12 + 0x80]
00007F6CFBECA12E   48 83 F0 01                     xor      rax, 1
__BinaryOperation_0x557fb304f210_cleanup:
00007F6CFBECA132   50                              push     rax
__BinaryOperation_0x557fb304f210_destroy_left:
00007F6CFBECA133   48 83 EC 08                     sub      rsp, 8
00007F6CFBECA137   4C 89 F6                        mov      rsi, r14
00007F6CFBECA13A   48 8B 7C 24 10                  mov      rdi, [rsp + 0x10]
00007F6CFBECA13F   41 FF 54 24 28                  call     qword ptr [r12 + 0x28]
00007F6CFBECA144   48 83 C4 08                     add      rsp, 8
00007F6CFBECA148   48 8B 04 24                     mov      rax, [rsp]
00007F6CFBECA14C   48 83 C4 18                     add      rsp, 24
__BinaryOperation_0x557fb304f210_complete:
__AssertStatement_0x557fb304f960_test:
00007F6CFBECA150   48 85 C0                        test     rax, rax
00007F6CFBECA153   0F 85 DA 00 00 00               jne      +0xDA ; __AssertStatement_0x557fb304f960_pass, __FunctionCall_0x557fb304fb70_push_registers, __FunctionCall_0x557fb304fb70_evaluate_arg_0_passed_value
__AssertStatement_0x557fb304f960_evaluate_message:
__BinaryOperation_0x557fb304f8d0_evaluate_left:
00007F6CFBECA159   48 B8 D0 44 07 B3 7F 55 00 00   movabs   rax, 0x0000557FB30744D0
00007F6CFBECA163   50                              push     rax
00007F6CFBECA164   48 83 EC 08                     sub      rsp, 8
00007F6CFBECA168   48 89 C7                        mov      rdi, rax
00007F6CFBECA16B   41 FF 54 24 20                  call     qword ptr [r12 + 0x20]
00007F6CFBECA170   48 83 C4 08                     add      rsp, 8
00007F6CFBECA174   58                              pop      rax
00007F6CFBECA175   50                              push     rax
__BinaryOperation_0x557fb304f8d0_evaluate_right:
00007F6CFBECA176   49 8B 45 10                     mov      rax, [r13 + 0x10]
00007F6CFBECA17A   50                              push     rax
00007F6CFBECA17B   48 89 C7                        mov      rdi, rax
00007F6CFBECA17E   41 FF 54 24 20                  call     qword ptr [r12 + 0x20]
00007F6CFBECA183   58                              pop      rax
00007F6CFBECA184   50                              push     rax
__BinaryOperation_0x557fb304f8d0_combine:
00007F6CFBECA185   4C 89 F2                        mov      rdx, r14
00007F6CFBECA188   48 89 C6                        mov      rsi, rax
00007F6CFBECA18B   48 8B 7C 24 08                  mov      rdi, [rsp + 0x8]
00007F6CFBECA190   41 FF 94 24 88 00 00 00         call     qword ptr [r12 + 0x88]
__BinaryOperation_0x557fb304f8d0_cleanup:
00007F6CFBECA198   50                              push     rax
__BinaryOperation_0x557fb304f8d0_destroy_left:
00007F6CFBECA199   48 83 EC 08                     sub      rsp, 8
00007F6CFBECA19D   4C 89 F6                        mov      rsi, r14
00007F6CFBECA1A0   48 8B 7C 24 10                  mov      rdi, [rsp + 0x10]
00007F6CFBECA1A5   41 FF 54 24 28                  call     qword ptr [r12 + 0x28]
00007F6CFBECA1AA   48 83 C4 08                     add      rsp, 8
__BinaryOperation_0x557fb304f8d0_destroy_right:
00007F6CFBECA1AE   48 83 EC 08                     sub      rsp, 8
00007F6CFBECA1B2   4C 89 F6                        mov      rsi, r14
00007F6CFBECA1B5   48 8B 7C 24 18                  mov      rdi, [rsp + 0x18]
00007F6CFBECA1BA   41 FF 54 24 28                  call     qword ptr [r12 + 0x28]
00007F6CFBECA1BF   48 83 C4 08                     add      rsp, 8
00007F6CFBECA1C3   48 8B 04 24                     mov      rax, [rsp]
00007F6CFBECA1C7   48 83 C4 18                     add      rsp, 24
__BinaryOperation_0x557fb304f8d0_complete:
00007F6CFBECA1CB   50                              push     rax
__AssertStatement_0x557fb304f960_allocate_instance:
00007F6CFBECA1CC   48 83 EC 08                     sub      rsp, 8
00007F6CFBECA1D0   48 C7 C7 28 00 00 00            mov      rdi, 0x00000028
00007F6CFBECA1D7   41 FF 54 24 08                  call     qword ptr [r12 + 0x8]
00007F6CFBECA1DC   48 83 C4 08                     add      rsp, 8
00007F6CFBECA1E0   48 85 C0                        test     rax, rax
00007F6CFBECA1E3   75 16                           jne      +0x16 ; __alloc_class_instance_skip_0
00007F6CFBECA1E5   49 8B 04 24                     mov      rax, [r12]
00007F6CFBECA1E9   50                              push     rax
00007F6CFBECA1EA   48 89 C7                        mov      rdi, rax
00007F6CFBECA1ED   41 FF 54 24 20                  call     qword ptr [r12 + 0x20]
00007F6CFBECA1F2   58                              pop      rax
00007F6CFBECA1F3   49 89 C7                        mov      r15, rax
00007F6CFBECA1F6   41 FF 64 24 30                  jmp      qword ptr [r12 + 0x30]
__alloc_class_instance_skip_0:
00007F6CFBECA1FB   48 C7 00 01 00 00 00            mov      qword ptr [rax], 0x00000001
00007F6CFBECA202   48 B9 F0 2D 7E B1 7F 55 00 00   movabs   rcx, 0x0000557FB17E2DF0
00007F6CFBECA20C   48 89 48 08                     mov      [rax + 0x8], rcx
00007F6CFBECA210   48 C7 40 10 EF FF FF FF         mov      qword ptr [rax + 0x10], 0xFFFFFFEF
00007F6CFBECA218   59                              pop      rcx
00007F6CFBECA219   48 89 48 18                     mov      [rax + 0x18], rcx
00007F6CFBECA21D   48 B9 E0 50 05 B3 7F 55 00 00   movabs   rcx, 0x0000557FB30550E0
00007F6CFBECA227   48 89 48 20                     mov      [rax + 0x20], rcx
__AssertStatement_0x557fb304f960_unwind:
00007F6CFBECA22B   49 89 C7                        mov      r15, rax
00007F6CFBECA22E   41 FF 64 24 30                  jmp      qword ptr [r12 + 0x30]
__AssertStatement_0x557fb304f960_pass:
__FunctionCall_0x557fb304fb70_push_registers:
__FunctionCall_0x557fb304fb70_evaluate_arg_0_passed_value:
00007F6CFBECA233   48 BF C0 28 05 B3 7F 55 00 00   movabs   rdi, 0x0000557FB30528C0
00007F6CFBECA23D   57                              push     rdi
00007F6CFBECA23E   48 83 EC 08                     sub      rsp, 8
00007F6CFBECA242   41 FF 54 24 20                  call     qword ptr [r12 + 0x20]
00007F6CFBECA247   48 83 C4 08                     add      rsp, 8
00007F6CFBECA24B   5F                              pop      rdi
__FunctionCall_0x557fb304fb70_call_function_-1_fragment_5_split_2:
00007F6CFBECA24C   48 B8 30 33 7E B1 7F 55 00 00   movabs   rax, 0x0000557FB17E3330
00007F6CFBECA256   FF D0                           call     rax
__FunctionCall_0x557fb304fb70_returned:
00007F6CFBECA258   4D 85 FF                        test     r15, r15
00007F6CFBECA25B   74 05                           je       +0x5 ; __FunctionCall_0x557fb304fb70_no_exception, __FunctionCall_0x557fb304fb70_restore_stack, __TryStatement_0x557fb303ae60_remove_exc_blocks
00007F6CFBECA25D   41 FF 64 24 30                  jmp      qword ptr [r12 + 0x30]
__FunctionCall_0x557fb304fb70_no_exception:
__FunctionCall_0x557fb304fb70_restore_stack:
__TryStatement_0x557fb303ae60_remove_exc_blocks:
00007F6CFBECA262   4C 8B 34 24                     mov      r14, [rsp]
00007F6CFBECA266   48 83 C4 68                     add      rsp, 104
__TryStatement_0x557fb303ae60_create_else_exc_block:
00007F6CFBECA26A   48 89 E0                        mov      rax, rsp
00007F6CFBECA26D   6A 00                           push     0x00
00007F6CFBECA26F   48 B9 67 A3 EC FB 6C 7F 00 00   movabs   rcx, 0x00007F6CFBECA367
00007F6CFBECA279   51                              push     rcx
00007F6CFBECA27A   41 55                           push     r13
00007F6CFBECA27C   41 54                           push     r12
00007F6CFBECA27E   55                              push     rbp
00007F6CFBECA27F   50                              push     rax
00007F6CFBECA280   41 56                           push     r14
00007F6CFBECA282   49 89 E6                        mov      r14, rsp
__ElseStatement_0x557fb3050420:
__FunctionCall_0x557fb30505b0_push_registers:
__FunctionCall_0x557fb30505b0_evaluate_arg_0_passed_value:
00007F6CFBECA285   48 BF 90 B2 07 B3 7F 55 00 00   movabs   rdi, 0x0000557FB307B290
00007F6CFBECA28F   57                              push     rdi
00007F6CFBECA290   48 83 EC 08                     sub      rsp, 8
00007F6CFBECA294   41 FF 54 24 20                  call     qword ptr [r12 + 0x20]
00007F6CFBECA299   48 83 C4 08                     add      rsp, 8
00007F6CFBECA29D   5F                              pop      rdi
__FunctionCall_0x557fb30505b0_call_function_-1_fragment_5_split_5:
00007F6CFBECA29E   48 B8 30 33 7E B1 7F 55 00 00   movabs   rax, 0x0000557FB17E3330
00007F6CFBECA2A8   FF D0                           call     rax
__FunctionCall_0x557fb30505b0_returned:
00007F6CFBECA2AA   4D 85 FF                        test     r15, r15
00007F6CFBECA2AD   74 05                           je       +0x5 ; __FunctionCall_0x557fb30505b0_no_exception, __FunctionCall_0x557fb30505b0_restore_stack, __TryStatement_0x557fb303ae60_delete_else_exc_block
00007F6CFBECA2AF   41 FF 64 24 30                  jmp      qword ptr [r12 + 0x30]
__FunctionCall_0x557fb30505b0_no_exception:
__FunctionCall_0x557fb30505b0_restore_stack:
__TryStatement_0x557fb303ae60_delete_else_exc_block:
00007F6CFBECA2B4   4C 8B 34 24                     mov      r14, [rsp]
00007F6CFBECA2B8   48 83 C4 38                     add      rsp, 56
00007F6CFBECA2BC   E9 A6 00 00 00                  jmp      +0xA6 ; __TryStatement_0x557fb303ae60_finally, __FinallyStatement_0x557fb3050760_save_exc
__TryStatement_0x557fb303ae60_except_0:
__TryStatement_0x557fb303ae60_except_0_write_value:
00007F6CFBECA2C1   48 83 EC 08                     sub      rsp, 8
00007F6CFBECA2C5   4C 89 F6                        mov      rsi, r14
00007F6CFBECA2C8   49 8B 7D 18                     mov      rdi, [r13 + 0x18]
00007F6CFBECA2CC   41 FF 54 24 28                  call     qword ptr [r12 + 0x28]
00007F6CFBECA2D1   48 83 C4 08                     add      rsp, 8
00007F6CFBECA2D5   4D 89 7D 18                     mov      [r13 + 0x18], r15
00007F6CFBECA2D9   4D 31 FF                        xor      r15, r15
__TryStatement_0x557fb303ae60_except_0_body:
__FinallyStatement_0x557fb3052820:
__FunctionCall_0x557fb304ff10_push_registers:
00007F6CFBECA2DC   48 83 EC 08                     sub      rsp, 8
__FunctionCall_0x557fb304ff10_evaluate_arg_0_passed_value:
00007F6CFBECA2E0   48 BF 80 EB 07 B3 7F 55 00 00   movabs   rdi, 0x0000557FB307EB80
00007F6CFBECA2EA   57                              push     rdi
00007F6CFBECA2EB   48 83 EC 08                     sub      rsp, 8
00007F6CFBECA2EF   41 FF 54 24 20                  call     qword ptr [r12 + 0x20]
00007F6CFBECA2F4   48 83 C4 08                     add      rsp, 8
00007F6CFBECA2F8   5F                              pop      rdi
__FunctionCall_0x557fb304ff10_call_function_-1_fragment_5_split_3:
00007F6CFBECA2F9   48 B8 30 33 7E B1 7F 55 00 00   movabs   rax, 0x0000557FB17E3330
00007F6CFBECA303   FF D0                           call     rax
__FunctionCall_0x557fb304ff10_returned:
00007F6CFBECA305   4D 85 FF                        test     r15, r15
00007F6CFBECA308   74 05                           je       +0x5 ; __FunctionCall_0x557fb304ff10_no_exception, __FunctionCall_0x557fb304ff10_restore_stack
00007F6CFBECA30A   41 FF 64 24 30                  jmp      qword ptr [r12 + 0x30]
__FunctionCall_0x557fb304ff10_no_exception:
__FunctionCall_0x557fb304ff10_restore_stack:
00007F6CFBECA30F   48 83 C4 08                     add      rsp, 8
__TryStatement_0x557fb303ae60_except_0_end:
00007F6CFBECA313   EB 52                           jmp      +0x52 ; __TryStatement_0x557fb303ae60_finally, __FinallyStatement_0x557fb3050760_save_exc
__TryStatement_0x557fb303ae60_except_1:
__TryStatement_0x557fb303ae60_except_1_write_value:
00007F6CFBECA315   48 83 EC 08                     sub      rsp, 8
00007F6CFBECA319   4C 89 F6                        mov      rsi, r14
00007F6CFBECA31C   49 8B 7D 20                     mov      rdi, [r13 + 0x20]
00007F6CFBECA320   41 FF 54 24 28                  call     qword ptr [r12 + 0x28]
00007F6CFBECA325   48 83 C4 08                     add      rsp, 8
00007F6CFBECA329   4D 89 7D 20                     mov      [r13 + 0x20], r15
00007F6CFBECA32D   4D 31 FF                        xor      r15, r15
__TryStatement_0x557fb303ae60_except_1_body:
__FinallyStatement_0x557fb304dd90:
__FunctionCall_0x557fb3050290_push_registers:
00007F6CFBECA330   48 83 EC 08                     sub      rsp, 8
__FunctionCall_0x557fb3050290_evaluate_arg_0_passed_value:
00007F6CFBECA334   48 BF 60 1E 08 B3 7F 55 00 00   movabs   rdi, 0x0000557FB3081E60
00007F6CFBECA33E   57                              push     rdi
00007F6CFBECA33F   48 83 EC 08                     sub      rsp, 8
00007F6CFBECA343   41 FF 54 24 20                  call     qword ptr [r12 + 0x20]
00007F6CFBECA348   48 83 C4 08                     add      rsp, 8
00007F6CFBECA34C   5F                              pop      rdi
__FunctionCall_0x557fb3050290_call_function_-1_fragment_5_split_4:
00007F6CFBECA34D   48 B8 30 33 7E B1 7F 55 00 00   movabs   rax, 0x0000557FB17E3330
00007F6CFBECA357   FF D0                           call     rax
__FunctionCall_0x557fb3050290_returned:
00007F6CFBECA359   4D 85 FF                        test     r15, r15
00007F6CFBECA35C   74 05                           je       +0x5 ; __FunctionCall_0x557fb3050290_no_exception, __FunctionCall_0x557fb3050290_restore_stack
00007F6CFBECA35E   41 FF 64 24 30                  jmp      qword ptr [r12 + 0x30]
__FunctionCall_0x557fb3050290_no_exception:
__FunctionCall_0x557fb3050290_restore_stack:
00007F6CFBECA363   48 83 C4 08                     add      rsp, 8
__TryStatement_0x557fb303ae60_finally:
__FinallyStatement_0x557fb3050760_save_exc:
00007F6CFBECA367   41 57                           push     r15
00007F6CFBECA369   4D 31 FF                        xor      r15, r15
__FinallyStatement_0x557fb3050760_body:
__FunctionCall_0x557fb3050830_push_registers:
__FunctionCall_0x557fb3050830_evaluate_arg_0_passed_value:
00007F6CFBECA36C   48 BF F0 0C 05 B3 7F 55 00 00   movabs   rdi, 0x0000557FB3050CF0
00007F6CFBECA376   57                              push     rdi
00007F6CFBECA377   48 83 EC 08                     sub      rsp, 8
00007F6CFBECA37B   41 FF 54 24 20                  call     qword ptr [r12 + 0x20]
00007F6CFBECA380   48 83 C4 08                     add      rsp, 8
00007F6CFBECA384   5F                              pop      rdi
__FunctionCall_0x557fb3050830_call_function_-1_fragment_5_split_6:
00007F6CFBECA385   48 B8 30 33 7E B1 7F 55 00 00   movabs   rax, 0x0000557FB17E3330
00007F6CFBECA38F   FF D0                           call     rax
__FunctionCall_0x557fb3050830_returned:
00007F6CFBECA391   4D 85 FF                        test     r15, r15
00007F6CFBECA394   74 05                           je       +0x5 ; __FunctionCall_0x557fb3050830_no_exception, __FunctionCall_0x557fb3050830_restore_stack, __FinallyStatement_0x557fb3050760_restore_exc
00007F6CFBECA396   41 FF 64 24 30                  jmp      qword ptr [r12 + 0x30]
__FunctionCall_0x557fb3050830_no_exception:
__FunctionCall_0x557fb3050830_restore_stack:
__FinallyStatement_0x557fb3050760_restore_exc:
00007F6CFBECA39B   4D 85 FF                        test     r15, r15
00007F6CFBECA39E   74 10                           je       +0x10 ; __FinallyStatement_0x557fb3050760_no_exc
00007F6CFBECA3A0   4C 89 F6                        mov      rsi, r14
00007F6CFBECA3A3   49 8B 3F                        mov      rdi, [r15]
00007F6CFBECA3A6   41 FF 54 24 28                  call     qword ptr [r12 + 0x28]
00007F6CFBECA3AB   41 FF 64 24 30                  jmp      qword ptr [r12 + 0x30]
__FinallyStatement_0x557fb3050760_no_exc:
00007F6CFBECA3B0   41 5F                           pop      r15
00007F6CFBECA3B2   4D 85 FF                        test     r15, r15
00007F6CFBECA3B5   74 05                           je       +0x5 ; __FinallyStatement_0x557fb3050760_end, __ModuleStatement_0x557fb3050990_return
00007F6CFBECA3B7   41 FF 64 24 30                  jmp      qword ptr [r12 + 0x30]
__FinallyStatement_0x557fb3050760_end:
__ModuleStatement_0x557fb3050990_return:
00007F6CFBECA3BC   48 83 C4 38                     add      rsp, 56
__ModuleStatement_0x557fb3050990_exc:
00007F6CFBECA3C0   4C 89 F8                        mov      rax, r15
00007F6CFBECA3C3   41 5F                           pop      r15
00007F6CFBECA3C5   41 5E                           pop      r14
00007F6CFBECA3C7   41 5D                           pop      r13
00007F6CFBECA3C9   41 5C                           pop      r12
00007F6CFBECA3CB   5D                              pop      rbp
00007F6CFBECA3CC   C3                              ret
# split 0 at offset 147 (00007F6CFBECA093)
# split 1 at offset 194 (00007F6CFBECA0C2)
# split 2 at offset 588 (00007F6CFBECA24C)
# split 3 at offset 761 (00007F6CFBECA2F9)
# split 4 at offset 845 (00007F6CFBECA34D)
# split 5 at offset 670 (00007F6CFBECA29E)
# split 6 at offset 901 (00007F6CFBECA385)
[__main__] ======== executing root scope
[refcount] 0x557fb303c100++ == 2
[refcount] 0x557fb303c100-- == 1
[refcount] 0x557fb3044cd0++ == 2
[refcount] 0x557fb3044cd0-- == 1
[refcount:create] created Unicode object 0x557fb3051fe0: yep
[refcount] 0x557fb3071c30++ == 2
[refcount] 0x557fb3051fe0++ == 2
[refcount] 0x557fb3051fe0-- == 1
[refcount] 0x557fb30744d0++ == 2
[refcount] 0x557fb3051fe0++ == 2
[refcount:create] created Unicode object 0x557fb3076590 with 14 chars
[refcount] 0x557fb3051fe0-- == 1
[refcount] 0x557fb30744d0-- == 1
[refcount] 0x557fb307eb80++ == 2
[refcount] 0x557fb307eb80-- == 1
[refcount] 0x557fb3050cf0++ == 2
[refcount] 0x557fb3050cf0-- == 1

[__main__] ======== import complete

[refcount:constants] deleting Unicode constant something went horribly horribly wrong
[refcount] 0x557fb3081e60-- == 0 (destroying)
[refcount:constants] deleting Unicode constant nooooo you monster! what have you done!
[refcount] 0x557fb307eb80-- == 0 (destroying)
[refcount:constants] deleting Unicode constant it is now the end of days
[refcount] 0x557fb3050cf0-- == 0 (destroying)
[refcount:constants] deleting Unicode constant y
[refcount] 0x557fb3071c30-- == 1
[refcount:constants] deleting Unicode constant 
[refcount] 0x557fb3044cd0-- == 0 (destroying)
[refcount:constants] deleting Unicode constant the string did not contain y - all is well
[refcount] 0x557fb307b290-- == 0 (destroying)
[refcount:constants] deleting Unicode constant code after the assert statement executed
[refcount] 0x557fb30528c0-- == 0 (destroying)
[refcount:constants] deleting Unicode constant /home/bencz/programming/python-jit/tests/exceptions_basic.py
[refcount] 0x557fb3051320-- == 0 (destroying)
[refcount:constants] deleting Unicode constant whatever you do, don't type a string with the letter y in it
[refcount] 0x557fb303c100-- == 0 (destroying)
[refcount:constants] deleting Unicode constant builtins
[refcount] 0x557fb304e170-- == 0 (destroying)
[refcount:constants] deleting Unicode constant you typed: 
[refcount] 0x557fb30744d0-- == 0 (destroying)
[refcount:constants] deleting Unicode constant __main__
[refcount] 0x557fb3053ec0-- == 0 (destroying)
[refcount:constants] deleting Unicode constant Definitions of built-in functions.
[refcount] 0x557fb3046420-- == 0 (destroying)
whatever you do, don't type a string with the letter y in it
nooooo you monster! what have you done!
it is now the end of days
